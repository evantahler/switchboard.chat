---

# Ensure SSH dirs
- file: "path=/root/.ssh state=directory owner=root"

# Create the deploy user
- user: name={{ deploy_user }} comment="Deploy User" groups="sudo" shell="/bin/bash"
- name: 'make deploy a sudoer'
  lineinfile: 'dest=/etc/sudoers state=present line="{{ deploy_user }} ALL=(ALL) NOPASSWD: ALL"'

- file: "path=/home/{{ deploy_user }}/.ssh state=directory owner={{ deploy_user }}"
- file: "path=/tmp/{{ deploy_user }}/.ssh state=directory  owner={{ deploy_user }}"

# Config home
- name: set up deploy directories
  file: path={{ item }} state=directory owner={{ deploy_user }}
  with_items:
    - '/home/{{ deploy_user }}/.ssh'
    - '/home/{{ deploy_user }}/www'

- name: ensure that the SSH auth files starts empty
  shell: 'rm -rf {{ item }}'
  with_items:
    - /tmp/{{ deploy_user }}/.ssh/authorized_keys_{{ deploy_user }}

- name: SSH access for DEPLOY user
  authorized_key:
    user: "{{ deploy_user }}"
    path: /tmp/{{ deploy_user }}/.ssh/authorized_keys_{{ deploy_user }}
    key: "{{ lookup('file', (['./ssh/public/', item, '.pub'] | join(''))) }}"
  with_items: "{{ ssh_deploy_users }}"
- shell: >
    cp /tmp/{{ deploy_user }}/.ssh/authorized_keys_{{ deploy_user }} /home/{{ deploy_user }}/.ssh/authorized_keys &&
    chown {{ deploy_user }} /home/{{ deploy_user }}/.ssh/authorized_keys &&
    chmod 0600 /home/{{ deploy_user }}/.ssh/authorized_keys

# Add deploy user's SSH keys
- copy: src=./ssh/private/deploy    dest=/home/{{ deploy_user }}/.ssh/id_rsa     owner={{ deploy_user }} mode=0600
- copy: src=./ssh/public/deploy.pub dest=/home/{{ deploy_user }}/.ssh/id_rsa.pub owner={{ deploy_user }} mode=0600

- name: ensure deploy owns deploy
  file: "path=/home/{{ deploy_user }} state=directory owner=deploy"
